#!/bin/bash
# Manual Oracle upgrade and clean install validation
set -ex 

SRU_VARS=./sru-scripts/sru-vars.template

if [ ! -f $SRU_VARS ]; then
   echo "Missing config environment file $SRU_VARS."
   exit 1
fi

. $SRU_VARS

parse_args $0 $@
assert_expected_vars PROPOSED_SCRIPT SAMPLE_CLOUDCONFIG LP_USER SSHOPTS \
    NETCFG_FILE
create_samplecloudconfig SAMPLE_CLOUDCONFIG
create_setup_proposed_script


echo "### BEGIN $UBUNTU_RELEASE"

# TODO: Use the Oracle CLI
echo "Please manually launch a $UBUNTU_RELEASE instance in Oracle and enter its IP address"
echo "(Don't forget to add your SSH public key to the instance when you launch it.)"
read -p "$UBUNTU_RELEASE IP address: " VM_IP

while ! ssh "${SSHOPTS[@]}" ubuntu@$VM_IP -- cloud-init status --wait --long; do
    sleep 5
done

# Capture current state
ssh "${SSHOPTS[@]}" ubuntu@$VM_IP -- dpkg-query --show cloud-init
ssh "${SSHOPTS[@]}" ubuntu@$VM_IP -- sudo cat /run/cloud-init/result.json
ssh "${SSHOPTS[@]}" ubuntu@$VM_IP -- ! grep Trace /var/log/cloud-init.log
ssh "${SSHOPTS[@]}" ubuntu@$VM_IP -- systemd-analyze
ssh "${SSHOPTS[@]}" ubuntu@$VM_IP -- systemd-analyze blame
ssh "${SSHOPTS[@]}" ubuntu@$VM_IP -- cloud-init analyze show
ssh "${SSHOPTS[@]}" ubuntu@$VM_IP -- cloud-init analyze blame
echo 'Networking config'
ssh "${SSHOPTS[@]}" ubuntu@$VM_IP -- cat $NETCFG_FILE

# Upgrade to -proposed cloud-init and reboot
scp "${SSHOPTS[@]}" ${PROPOSED_SCRIPT} ubuntu@$VM_IP:.
ssh "${SSHOPTS[@]}" ubuntu@$VM_IP sudo bash ${PROPOSED_SCRIPT} 2>&1 | egrep 'cloud-init'
ssh "${SSHOPTS[@]}" ubuntu@$VM_IP -- dpkg-query --show cloud-init
ssh "${SSHOPTS[@]}" ubuntu@$VM_IP -- sudo hostname SRU-didnt-work
ssh "${SSHOPTS[@]}" ubuntu@$VM_IP -- sudo rm -f $NETCFG_FILE
ssh "${SSHOPTS[@]}" ubuntu@$VM_IP -- sudo cloud-init clean --logs --reboot || true
ssh-keygen -f "/home/ubuntu/.ssh/known_hosts" -R $VM_IP

sleep 10  # Wait for the instance to actually go down
while ! ssh "${SSHOPTS[@]}" ubuntu@$VM_IP -- cloud-init status --wait --long; do
    sleep 1
done

ssh "${SSHOPTS[@]}" ubuntu@$VM_IP -- hostname
ssh "${SSHOPTS[@]}" ubuntu@$VM_IP -- ! grep Trace /var/log/cloud-init.log
ssh "${SSHOPTS[@]}" ubuntu@$VM_IP -- systemd-analyze
ssh "${SSHOPTS[@]}" ubuntu@$VM_IP -- systemd-analyze blame
ssh "${SSHOPTS[@]}" ubuntu@$VM_IP -- cloud-init analyze show
ssh "${SSHOPTS[@]}" ubuntu@$VM_IP -- cloud-init analyze blame
echo 'After upgrade Networking config'
ssh "${SSHOPTS[@]}" ubuntu@$VM_IP -- cat $NETCFG_FILE
ssh "${SSHOPTS[@]}" ubuntu@$VM_IP -- cloud-init query --format "'cloud-region: {{cloud_name}}-{{region}}'"
echo "Get cloud-id"
ssh "${SSHOPTS[@]}" ubuntu@$VM_IP -- cloud-id
echo 'Validating whether metadata is being updated per boot LP:1819913'
ssh "${SSHOPTS[@]}" ubuntu@$VM_IP -- "grep 'Update datasource' /var/log/cloud-init.log"
ssh "${SSHOPTS[@]}" ubuntu@$VM_IP -- sudo reboot || true

sleep 10  # Wait for the instance to actually go down
while ! ssh "${SSHOPTS[@]}" ubuntu@$VM_IP -- cloud-init status --wait --long; do
    sleep 1
done
echo 'After reboot'
ssh "${SSHOPTS[@]}" ubuntu@$VM_IP -- "grep 'Update datasource' /var/log/cloud-init.log"
echo "### END $UBUNTU_RELEASE"

echo "Don't forget to clean up your instances!"
