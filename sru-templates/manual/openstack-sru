# Manual OpenStack upgrade and clean install validation Xenial, Bionic, Cosmic

SRU_SERIES="%SRU_SERIES%"

cat > sethostname.yaml << EOF
## template: jinja
#cloud-config
ssh_import_id : [%SRU_LP_USER%]
hostname: SRU-worked-{{v1.cloud_name}}
EOF

cat > setup_proposed.sh <<EOF
#/bin/bash
mirror=http://archive.ubuntu.com/ubuntu
echo deb \$mirror \$(lsb_release -sc)-proposed main | tee /etc/apt/sources.list.d/proposed.list
apt-get update -q
apt-get install -qy cloud-init
EOF

ADMIN_NET_ID=`openstack network list -f json | jq -r '.[] | select(.Name == "danielwatkins_admin_net") | .ID'`
openstack image list --property architecture=x86_64 -f json > images.json

sshopts=( -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o LogLevel=ERROR )

for RELEASE in $SRU_SERIES; do
  echo "### BEGIN $RELEASE"

  VM_IP=`openstack floating ip create ext_net -f json | jq '.floating_ip_address' -r`

  # Determine image, launch instance and attach IP address
  image=$(cat images.json | jq -r '.[]|select((.Name|contains("disk1.img")) and (.Name|contains("'$RELEASE'"))) | .ID' | tail -n 1)
  openstack server create --flavor m1.small --image $image --key-name canonical --nic net-id=$ADMIN_NET_ID --user-data sethostname.yaml test-$RELEASE --wait
  ssh-keygen -f "/home/ubuntu/.ssh/known_hosts" -R $VM_IP
  openstack server add floating ip test-$RELEASE $VM_IP

  sleep 10  # Wait for the instance to actually go down
  while ! ssh "${sshopts[@]}" ubuntu@$VM_IP -- cloud-init status --wait --long; do
      sleep 5
  done

  # Capture current state
  ssh "${sshopts[@]}" ubuntu@$VM_IP -- dpkg-query --show cloud-init
  ssh "${sshopts[@]}" ubuntu@$VM_IP -- sudo cat /run/cloud-init/result.json
  ssh "${sshopts[@]}" ubuntu@$VM_IP -- grep Trace /var/log/cloud-init.log
  ssh "${sshopts[@]}" ubuntu@$VM_IP -- systemd-analyze
  ssh "${sshopts[@]}" ubuntu@$VM_IP -- systemd-analyze blame
  ssh "${sshopts[@]}" ubuntu@$VM_IP -- cloud-init analyze show
  ssh "${sshopts[@]}" ubuntu@$VM_IP -- cloud-init analyze blame

  # Upgrade to -proposed cloud-init and reboot
  scp "${sshopts[@]}" setup_proposed.sh ubuntu@$VM_IP:.
  ssh "${sshopts[@]}" ubuntu@$VM_IP sudo bash ./setup_proposed.sh 2>&1 | egrep 'cloud-init'
  ssh "${sshopts[@]}" ubuntu@$VM_IP -- dpkg-query --show cloud-init
  ssh "${sshopts[@]}" ubuntu@$VM_IP -- sudo hostname SRU-didnt-work
  ssh "${sshopts[@]}" ubuntu@$VM_IP -- sudo cloud-init clean --logs --reboot
  ssh-keygen -f "/home/ubuntu/.ssh/known_hosts" -R $VM_IP

  sleep 10  # Wait for the instance to actually go down
  while ! ssh "${sshopts[@]}" ubuntu@$VM_IP -- cloud-init status --wait --long; do
      sleep 5
  done

  ssh "${sshopts[@]}" ubuntu@$VM_IP -- hostname
  ssh "${sshopts[@]}" ubuntu@$VM_IP -- "grep Trace /var/log/cloud-init*"
  ssh "${sshopts[@]}" ubuntu@$VM_IP -- systemd-analyze
  ssh "${sshopts[@]}" ubuntu@$VM_IP -- systemd-analyze blame
  ssh "${sshopts[@]}" ubuntu@$VM_IP -- cloud-init analyze show
  ssh "${sshopts[@]}" ubuntu@$VM_IP -- cloud-init analyze blame
  ssh "${sshopts[@]}" ubuntu@$VM_IP -- cloud-init query --format 'cloud-region: {{cloud_name}}-{{region}}'
  echo "Get cloud-id"
  ssh "${sshopts[@]}" ubuntu@$VM_IP -- cloud-id
  echo 'Validating whether metadata is being updated per boot LP:1819913'
  ssh "${sshopts[@]}" ubuntu@$VM_IP -- "grep 'Update datasource' /var/log/cloud-init.log"
  ssh "${sshopts[@]}" ubuntu@$VM_IP -- sudo reboot || true
  echo 'After reboot'
  ssh "${sshopts[@]}" ubuntu@$VM_IP -- "grep 'Update datasource' /var/log/cloud-init.log"
done

for RELEASE in $SRU_SERIES; do
  openstack server delete test-$RELEASE
done

